{"ast":null,"code":"import _classCallCheck from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Field,reduxForm}from'redux-form';import{Link}from\"react-router-dom\";import{Form}from\"semantic-ui-react\";var ProjectCreateForm=/*#__PURE__*/function(_React$Component){_inherits(ProjectCreateForm,_React$Component);function ProjectCreateForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,ProjectCreateForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ProjectCreateForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.renderInput=function(_ref){var input=_ref.input,label=_ref.label,meta=_ref.meta;var className=\"field \".concat(meta.error&&meta.touched?'error':'');return React.createElement(\"div\",{className:className},React.createElement(\"label\",null,label),React.createElement(\"input\",Object.assign({},input,{autoComplete:\"off\"})),_this.renderError(meta));};_this.onSubmit=function(formValues){_this.props.onSubmit(formValues);};return _this;}_createClass(ProjectCreateForm,[{key:\"renderError\",value:function renderError(_ref2){var error=_ref2.error,touched=_ref2.touched;if(touched&&error){return React.createElement(\"div\",{className:\"ui error message\"},React.createElement(\"div\",{className:\"header\"},error));}}},{key:\"renderCreate\",value:function renderCreate(){return React.createElement(\"div\",{style:{textAlign:'left'}},React.createElement(Link,{to:\"/projects\",className:\"ui button secondary\"},\"Cancel\"));}},{key:\"render\",value:function render(){return React.createElement(\"form\",{onSubmit:this.props.handleSubmit(this.onSubmit),className:\"ui form error\"},React.createElement(Form.Group,{widths:\"equal\"},React.createElement(Field,{name:\"project_name\",component:this.renderInput,label:\"Enter Project Title\"}),React.createElement(Field,{name:\"project_manager\",component:this.renderInput,label:\"Enter Project Manager\"})),React.createElement(Form.Group,{widths:\"equal\"},React.createElement(Field,{name:\"create_date\",component:this.renderInput,label:\"Enter Create Date (Format: mm/dd/yy)\"}),React.createElement(Field,{name:\"due_date\",component:this.renderInput,label:\"Enter Due Date (Format: mm/dd/yy)\"})),React.createElement(Field,{name:\"project_description\",component:this.renderInput,label:\"Enter Project Description\"}),React.createElement(\"div\",{style:{display:\"flex\"}},React.createElement(\"button\",{className:\"ui button primary\"},\"Submit\"),this.renderCreate()));}}]);return ProjectCreateForm;}(React.Component);var validate=function validate(formValues){var errors={};if(!formValues.project_name){errors.title='You must enter a project name';}if(!formValues.create_date){errors.description='You must enter a create date';}if(!formValues.due_date){errors.description='You must enter a due date';}if(!formValues.project_manager){errors.description='You must enter a Project Manager';}return errors;};export default reduxForm({form:'projectForm',validate:validate})(ProjectCreateForm);","map":{"version":3,"sources":["/Users/yingyingxiong/Desktop/groupproject/bigbrothers/src/bigbrothers/components/ProjectCreateForm.js"],"names":["React","Field","reduxForm","Link","Form","ProjectCreateForm","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","textAlign","handleSubmit","display","renderCreate","Component","validate","errors","project_name","title","create_date","description","due_date","project_manager","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from \"react-router-dom\";\nimport { Form } from \"semantic-ui-react\";\n\nclass ProjectCreateForm extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\"/>\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  renderCreate() {\n    return (\n      <div style={{ textAlign: 'left' }}>\n        <Link to=\"/projects\" className=\"ui button secondary\">\n          Cancel\n        </Link>\n      </div>\n    )\n  }\n\n  onSubmit = formValues => {\n    this.props.onSubmit(formValues);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui form error\"\n      >\n        <Form.Group widths='equal'>\n          <Field name=\"project_name\" component={this.renderInput} label=\"Enter Project Title\" />\n          <Field name=\"project_manager\" component={this.renderInput} label=\"Enter Project Manager\" />\n        </Form.Group>\n        <Form.Group widths='equal'>\n          <Field\n            name=\"create_date\"\n            component={this.renderInput}\n            label=\"Enter Create Date (Format: mm/dd/yy)\"\n          />\n          <Field name=\"due_date\" component={this.renderInput} label=\"Enter Due Date (Format: mm/dd/yy)\" />\n        </Form.Group>\n        <Field name=\"project_description\" component={this.renderInput} label=\"Enter Project Description\" />\n        <div style={{ display: \"flex\" }}>\n          <button className=\"ui button primary\">Submit</button>\n          {this.renderCreate()}\n        </div>\n      </form>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.project_name) {\n    errors.title = 'You must enter a project name';\n  }\n\n  if (!formValues.create_date) {\n    errors.description = 'You must enter a create date';\n  }\n\n  if (!formValues.due_date) {\n    errors.description = 'You must enter a due date';\n  }\n\n  if(!formValues.project_manager) {\n    errors.description = 'You must enter a Project Manager';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'projectForm',\n  validate\n})(ProjectCreateForm);\n"]},"metadata":{},"sourceType":"module"}