{"ast":null,"code":"var _jsxFileName = \"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/src/bigbrothers/containers/TicketsList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Label } from \"semantic-ui-react\";\nimport { getTickets } from \"../actions\";\n\nclass TicketsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.labelColor = level => {\n      if (level === \"high\") {\n        return React.createElement(Label, {\n          attached: \"bottom right\",\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, `${level}`));\n      }\n\n      if (level === \"medium\") {\n        return React.createElement(Label, {\n          attached: \"bottom right\",\n          color: \"olive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, `${level}`));\n      }\n\n      if (level === \"low\") {\n        return React.createElement(Label, {\n          attached: \"bottom right\",\n          color: \"blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, `${level}`));\n      }\n    };\n\n    this.renderList = () => {\n      return this.props.tickets.map(ticket => {\n        return React.createElement(Card, {\n          color: \"olive\",\n          key: ticket.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Card.Content, {\n          style: {\n            backgroundColor: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: `/tickets/detail/${ticket.id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            fontSize: \"22px\",\n            color: \"orange\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, ticket.ticket_title))), React.createElement(Card.Meta, {\n          style: {\n            marginTop: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            color: \"white\",\n            fontSize: \"13px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Description: \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, ticket.ticket_description === \"\" ? \"No Description\" : ticket.ticket_description)))), React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Card.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Created Date: \", ticket.create_date), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Due Date: \", ticket.due_date), React.createElement(Link, {\n          to: `/projects/detail/${ticket.project}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Project: \", ticket.project_name)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, `Spent / Finished: ${ticket.hours_spent} / ${ticket.budgeted_hours}`))), React.createElement(Card.Content, {\n          extra: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, ticket.assigned_employee_name)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Status: \"), ticket.status, this.labelColor(ticket.urgent_level))));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTickets();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Tickets\"), React.createElement(Card.Group, {\n      itemsPerRow: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    tickets: Object.values(state.tickets)\n  };\n};\n\nconst actions = {\n  getTickets\n};\nexport default connect(mapStateToProps, actions)(TicketsList);","map":{"version":3,"sources":["/Users/yingyingxiong/Desktop/groupproject/bigbrothers/src/bigbrothers/containers/TicketsList.js"],"names":["React","connect","Link","Card","Icon","Label","getTickets","TicketsList","Component","labelColor","level","renderList","props","tickets","map","ticket","id","backgroundColor","fontSize","color","ticket_title","marginTop","ticket_description","create_date","due_date","project","project_name","hours_spent","budgeted_hours","assigned_employee_name","status","urgent_level","componentDidMount","render","mapStateToProps","state","Object","values","actions"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Label } from \"semantic-ui-react\";\nimport { getTickets } from \"../actions\";\n\nclass TicketsList extends React.Component {\n  componentDidMount() {\n    this.props.getTickets();\n  };\n\n  labelColor = level => {\n    if (level === \"high\") {\n      return (\n        <Label attached=\"bottom right\" color=\"red\">\n          <div>{`${level}`}</div>\n        </Label>\n      );\n    }\n\n    if (level === \"medium\") {\n      return (\n        <Label attached=\"bottom right\" color=\"olive\">\n          <div>{`${level}`}</div>\n        </Label>\n      );\n    }\n\n    if (level === \"low\") {\n      return (\n        <Label attached=\"bottom right\" color=\"blue\">\n          <div>{`${level}`}</div>\n        </Label>\n      );\n    }\n  }\n\n  // renderStatus = value => {\n  //   if (value === \"open\") {\n  //     return (\n  //       <Label attached=\"bottom right\" color=\"red\">\n  //         <div>{`${value}`}</div>\n  //       </Label>\n  //     );\n  //   }\n\n  //   if (value === \"medium\") {\n  //     return (\n  //       <Label attached=\"bottom right\" color=\"violet\">\n  //         <div>{`${value}`}</div>\n  //       </Label>\n  //     );\n  //   }\n\n  //   if (value === \"low\") {\n  //     return (\n  //       <Label attached=\"bottom right\" color=\"blue\">\n  //         <div>{`${value}`}</div>\n  //       </Label>\n  //     );\n  //   }\n  // }\n\n  renderList = () => {\n    return this.props.tickets.map(ticket => {\n      return (\n        <Card color=\"olive\" key={ticket.id}>\n          <Card.Content style={{ backgroundColor: \"black\"}}>\n            <Card.Header>\n              <Link to={`/tickets/detail/${ticket.id}`}>\n                <div style={{ fontSize: \"22px\", color: \"orange\"}}>\n                {ticket.ticket_title}\n                </div>\n              </Link>\n            </Card.Header>\n            <Card.Meta style={{ marginTop: \"10px\"}}>\n              <div style={{ color: \"white\", fontSize: \"13px\" }}>\n                Description: <br /><b>{ticket.ticket_description === \"\" ? \"No Description\" : ticket.ticket_description}</b>\n              </div>\n            </Card.Meta>\n          </Card.Content>\n          <Card.Content> \n            <Card.Description>\n              <div>Created Date: {ticket.create_date}</div>\n              <div>Due Date: {ticket.due_date}</div>\n              <Link to={`/projects/detail/${ticket.project}`}>\n                <div>Project: {ticket.project_name}</div>\n              </Link>\n              <div>{`Spent / Finished: ${ticket.hours_spent} / ${ticket.budgeted_hours}`}</div>\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n              <div><Icon name='user' />\n              <b>{ticket.assigned_employee_name}</b>\n              </div>\n              <div>\n              <b>Status: </b>{ticket.status}\n              {this.labelColor(ticket.urgent_level)}\n              </div>\n          </Card.Content>\n        </Card>)\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Tickets</h2>\n        <Card.Group itemsPerRow={4}>\n          {this.renderList()}\n        </Card.Group>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { tickets: Object.values(state.tickets) };\n};\n\nconst actions = {\n  getTickets\n}\n\nexport default connect(mapStateToProps, actions)(TicketsList);\n"]},"metadata":{},"sourceType":"module"}