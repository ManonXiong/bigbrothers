{"ast":null,"code":"var _jsxFileName = \"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/src/bigbrothers/components/ProjectCreateForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from \"react-router-dom\";\nimport { Form } from \"semantic-ui-react\";\n\nclass ProjectCreateForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  renderCreate() {\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects\",\n      className: \"ui button secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"project_name\",\n      component: this.renderInput,\n      label: \"Enter Project Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"project_manager\",\n      component: this.renderInput,\n      label: \"Enter Project Manager\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"create_date\",\n      component: this.renderInput,\n      label: \"Enter Create Date (Format: mm/dd/yy)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"due_date\",\n      component: this.renderInput,\n      label: \"Enter Due Date (Format: mm/dd/yy)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"project_description\",\n      component: this.renderInput,\n      label: \"Enter Project Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Submit\"), this.renderCreate()));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.project_name) {\n    errors.title = 'You must enter a project name';\n  }\n\n  if (!formValues.create_date) {\n    errors.description = 'You must enter a create date';\n  }\n\n  if (!formValues.due_date) {\n    errors.description = 'You must enter a due date';\n  }\n\n  if (!formValues.project_manager) {\n    errors.description = 'You must enter a Project Manager';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'projectForm',\n  validate\n})(ProjectCreateForm);","map":{"version":3,"sources":["/Users/yingyingxiong/Desktop/groupproject/bigbrothers/src/bigbrothers/components/ProjectCreateForm.js"],"names":["React","Field","reduxForm","Link","Form","ProjectCreateForm","Component","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","renderCreate","textAlign","render","handleSubmit","display","validate","errors","project_name","title","create_date","description","due_date","project_manager","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from \"react-router-dom\";\nimport { Form } from \"semantic-ui-react\";\n\nclass ProjectCreateForm extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\"/>\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  renderCreate() {\n    return (\n      <div style={{ textAlign: 'left' }}>\n        <Link to=\"/projects\" className=\"ui button secondary\">\n          Cancel\n        </Link>\n      </div>\n    )\n  }\n\n  onSubmit = formValues => {\n    this.props.onSubmit(formValues);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui form error\"\n      >\n        <Form.Group widths='equal'>\n          <Field name=\"project_name\" component={this.renderInput} label=\"Enter Project Title\" />\n          <Field name=\"project_manager\" component={this.renderInput} label=\"Enter Project Manager\" />\n        </Form.Group>\n        <Form.Group widths='equal'>\n          <Field\n            name=\"create_date\"\n            component={this.renderInput}\n            label=\"Enter Create Date (Format: mm/dd/yy)\"\n          />\n          <Field name=\"due_date\" component={this.renderInput} label=\"Enter Due Date (Format: mm/dd/yy)\" />\n        </Form.Group>\n        <Field name=\"project_description\" component={this.renderInput} label=\"Enter Project Description\" />\n        <div style={{ display: \"flex\" }}>\n          <button className=\"ui button primary\">Submit</button>\n          {this.renderCreate()}\n        </div>\n      </form>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.project_name) {\n    errors.title = 'You must enter a project name';\n  }\n\n  if (!formValues.create_date) {\n    errors.description = 'You must enter a create date';\n  }\n\n  if (!formValues.due_date) {\n    errors.description = 'You must enter a due date';\n  }\n\n  if(!formValues.project_manager) {\n    errors.description = 'You must enter a Project Manager';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'projectForm',\n  validate\n})(ProjectCreateForm);\n"]},"metadata":{},"sourceType":"module"}