{"ast":null,"code":"import _classCallCheck from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yingyingxiong/Desktop/groupproject/bigbrothers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{connect}from\"react-redux\";import{Link}from\"react-router-dom\";import{Card,Icon,Label}from\"semantic-ui-react\";import{getTickets}from\"../actions\";var TicketsList=/*#__PURE__*/function(_React$Component){_inherits(TicketsList,_React$Component);function TicketsList(){var _getPrototypeOf2;var _this;_classCallCheck(this,TicketsList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TicketsList)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.labelColor=function(level){if(level===\"high\"){return React.createElement(Label,{attached:\"bottom right\",color:\"red\"},React.createElement(\"div\",null,\"\".concat(level)));}if(level===\"medium\"){return React.createElement(Label,{attached:\"bottom right\",color:\"olive\"},React.createElement(\"div\",null,\"\".concat(level)));}if(level===\"low\"){return React.createElement(Label,{attached:\"bottom right\",color:\"blue\"},React.createElement(\"div\",null,\"\".concat(level)));}};_this.renderList=function(){return _this.props.tickets.map(function(ticket){return React.createElement(Card,{color:\"olive\",key:ticket.id},React.createElement(Card.Content,{style:{backgroundColor:\"black\"}},React.createElement(Card.Header,null,React.createElement(Link,{to:\"/tickets/detail/\".concat(ticket.id)},React.createElement(\"div\",{style:{fontSize:\"22px\",color:\"orange\"}},ticket.ticket_title))),React.createElement(Card.Meta,{style:{marginTop:\"10px\"}},React.createElement(\"div\",{style:{color:\"white\",fontSize:\"13px\"}},\"Description: \",React.createElement(\"br\",null),React.createElement(\"b\",null,ticket.ticket_description===\"\"?\"No Description\":ticket.ticket_description)))),React.createElement(Card.Content,null,React.createElement(Card.Description,null,React.createElement(\"div\",null,\"Created Date: \",ticket.create_date),React.createElement(\"div\",null,\"Due Date: \",ticket.due_date),React.createElement(Link,{to:\"/projects/detail/\".concat(ticket.project)},React.createElement(\"div\",null,\"Project: \",ticket.project_name)),React.createElement(\"div\",null,\"Spent / Finished: \".concat(ticket.hours_spent,\" / \").concat(ticket.budgeted_hours)))),React.createElement(Card.Content,{extra:true},React.createElement(Icon,{name:\"user\"}),React.createElement(\"b\",null,ticket.assigned_employee_name),React.createElement(\"b\",null,\"Status: \"),ticket.status,_this.labelColor(ticket.urgent_level)));});};return _this;}_createClass(TicketsList,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getTickets();}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Tickets\"),React.createElement(Card.Group,{itemsPerRow:4},this.renderList()));}}]);return TicketsList;}(React.Component);;var mapStateToProps=function mapStateToProps(state){return{tickets:Object.values(state.tickets)};};var actions={getTickets:getTickets};export default connect(mapStateToProps,actions)(TicketsList);","map":{"version":3,"sources":["/Users/yingyingxiong/Desktop/groupproject/bigbrothers/src/bigbrothers/containers/TicketsList.js"],"names":["React","connect","Link","Card","Icon","Label","getTickets","TicketsList","labelColor","level","renderList","props","tickets","map","ticket","id","backgroundColor","fontSize","color","ticket_title","marginTop","ticket_description","create_date","due_date","project","project_name","hours_spent","budgeted_hours","assigned_employee_name","status","urgent_level","Component","mapStateToProps","state","Object","values","actions"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Label } from \"semantic-ui-react\";\nimport { getTickets } from \"../actions\";\n\nclass TicketsList extends React.Component {\n  componentDidMount() {\n    this.props.getTickets();\n  };\n\n  labelColor = level => {\n    if (level === \"high\") {\n      return (\n        <Label attached=\"bottom right\" color=\"red\">\n          <div>{`${level}`}</div>\n        </Label>\n      );\n    }\n\n    if (level === \"medium\") {\n      return (\n        <Label attached=\"bottom right\" color=\"olive\">\n          <div>{`${level}`}</div>\n        </Label>\n      );\n    }\n\n    if (level === \"low\") {\n      return (\n        <Label attached=\"bottom right\" color=\"blue\">\n          <div>{`${level}`}</div>\n        </Label>\n      );\n    }\n  }\n\n  // renderStatus = value => {\n  //   if (value === \"open\") {\n  //     return (\n  //       <Label attached=\"bottom right\" color=\"red\">\n  //         <div>{`${value}`}</div>\n  //       </Label>\n  //     );\n  //   }\n\n  //   if (value === \"medium\") {\n  //     return (\n  //       <Label attached=\"bottom right\" color=\"violet\">\n  //         <div>{`${value}`}</div>\n  //       </Label>\n  //     );\n  //   }\n\n  //   if (value === \"low\") {\n  //     return (\n  //       <Label attached=\"bottom right\" color=\"blue\">\n  //         <div>{`${value}`}</div>\n  //       </Label>\n  //     );\n  //   }\n  // }\n\n  renderList = () => {\n    return this.props.tickets.map(ticket => {\n      return (\n        <Card color=\"olive\" key={ticket.id}>\n          <Card.Content style={{ backgroundColor: \"black\"}}>\n            <Card.Header>\n              <Link to={`/tickets/detail/${ticket.id}`}>\n                <div style={{ fontSize: \"22px\", color: \"orange\"}}>\n                {ticket.ticket_title}\n                </div>\n              </Link>\n            </Card.Header>\n            <Card.Meta style={{ marginTop: \"10px\"}}>\n              <div style={{ color: \"white\", fontSize: \"13px\" }}>\n                Description: <br /><b>{ticket.ticket_description === \"\" ? \"No Description\" : ticket.ticket_description}</b>\n              </div>\n            </Card.Meta>\n          </Card.Content>\n          <Card.Content> \n            <Card.Description>\n              <div>Created Date: {ticket.create_date}</div>\n              <div>Due Date: {ticket.due_date}</div>\n              <Link to={`/projects/detail/${ticket.project}`}>\n                <div>Project: {ticket.project_name}</div>\n              </Link>\n              <div>{`Spent / Finished: ${ticket.hours_spent} / ${ticket.budgeted_hours}`}</div>\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n              <Icon name='user' />\n              <b>{ticket.assigned_employee_name}</b>\n              <b>Status: </b>{ticket.status}\n              {this.labelColor(ticket.urgent_level)}\n          </Card.Content>\n        </Card>)\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Tickets</h2>\n        <Card.Group itemsPerRow={4}>\n          {this.renderList()}\n        </Card.Group>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { tickets: Object.values(state.tickets) };\n};\n\nconst actions = {\n  getTickets\n}\n\nexport default connect(mapStateToProps, actions)(TicketsList);\n"]},"metadata":{},"sourceType":"module"}